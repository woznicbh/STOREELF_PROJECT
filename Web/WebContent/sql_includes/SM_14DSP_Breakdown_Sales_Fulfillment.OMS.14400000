 With active_shipped as ( SELECT /*+ FULL(A) FULL(B) FULL(C) FULL(D) */ TRUNC(b.ORDER_DATE) AS order_date, CASE WHEN sn.node_type = 'DSV' then 'DSV' WHEN sn.node_type = 'STORE' then 'STORE' ELSE c.ship_node END AS ship_node, CASE WHEN c.ship_node in ('859','869','879','889') then 'LFC' END AS node_type, SUM( CASE WHEN a.shipped_quantity = 0 THEN a.line_total - a.TAX ELSE 0 END) active_dollars, SUM(CASE WHEN a.shipped_quantity > 0 THEN a.line_total - a.TAX ELSE 0 END) shipped_dollars FROM sterling.yfs_order_line a JOIN sterling.yfs_order_header b ON a.ORDER_HEADER_KEY = b.ORDER_HEADER_KEY JOIN sterling.yfs_order_line_schedule c ON a.ORDER_HEADER_KEY = c.ORDER_HEADER_KEY AND a.ORDER_LINE_KEY = c.ORDER_LINE_KEY JOIN sterling.yfs_item d ON a.ITEM_ID = d.ITEM_ID JOIN sterling.yfs_ship_node sn ON c.SHIP_NODE = sn.SHIPNODE_KEY WHERE     TRUNC(b.ORDER_DATE) >= trunc(sysdate-7) AND c.SCHEDULE_NO = 2 AND a.LINE_TYPE <> 'PGC' AND a.LINE_TYPE <> 'VGC' AND d.EXTN_DEPT <> '830' GROUP BY TRUNC(b.ORDER_DATE), CASE WHEN sn.node_type = 'DSV' then 'DSV' WHEN sn.node_type = 'STORE' then 'STORE' ELSE c.ship_node END , CASE WHEN c.ship_node in ('859','869','879','889') then 'LFC' END        ), cancelled as ( SELECT /*+ MATERIZLIZE FULL(A) FULL(B) FULL(C) FULL(D)*/ TRUNC(b.ORDER_DATE) AS order_date, CASE WHEN sn.node_type = 'DSV' then 'DSV' WHEN sn.node_type = 'STORE' then 'STORE' ELSE c.ship_node END AS ship_node, trim(TO_CHAR(SUM(A.EXTN_TAXABLE_AMOUNT * ((A.ORIGINAL_ORDERED_QTY - A.ORDERED_QTY) / A.ORIGINAL_ORDERED_QTY)), '999999999999999.99')) cancel_order_dollars FROM sterling.yfs_order_line a JOIN sterling.yfs_order_header b ON a.ORDER_HEADER_KEY = b.ORDER_HEADER_KEY JOIN sterling.yfs_order_line_schedule c ON a.ORDER_HEADER_KEY = c.ORDER_HEADER_KEY AND a.ORDER_LINE_KEY = c.ORDER_LINE_KEY JOIN sterling.yfs_item d ON a.ITEM_ID = d.ITEM_ID JOIN sterling.yfs_ship_node sn ON c.SHIP_NODE = sn.SHIPNODE_KEY WHERE     TRUNC(b.ORDER_DATE) >= trunc(sysdate-7)  AND B.enterprise_key = 'STOREELF.COM' AND c.SCHEDULE_NO = 2 AND a.ORDERED_QTY < a.ORIGINAL_ORDERED_QTY AND a.LINE_TYPE <> 'PGC' AND a.LINE_TYPE <> 'VGC' AND d.EXTN_DEPT <> '830' AND B.DOCUMENT_TYPE = '0001' GROUP BY TRUNC(b.order_date), CASE WHEN sn.node_type = 'DSV' then 'DSV' WHEN sn.node_type = 'STORE' then 'STORE' ELSE c.ship_node END ORDER BY TRUNC(b.order_date) DESC, CASE WHEN sn.node_type = 'DSV' then 'DSV' WHEN sn.node_type = 'STORE' then 'STORE' ELSE c.ship_node END ) select /*+ Parallel(8)  */ to_char(a.order_date,'MM/DD/YYYY') order_date, a.ship_node, a.node_type, NVL(a.active_dollars,'0.00') active_dollars,  NVL(a.shipped_dollars,'0.00') shipped_dollars, NVL(c.cancel_order_dollars,'0.00') cancel_orders from active_shipped a left outer join cancelled c on a.ship_node = c.ship_node and a.order_date = c.order_date order by a.order_date, a.node_type asc, a.ship_node asc