 With active_shipped as ( SELECT TRUNC(b.ORDER_DATE) AS order_date,        SUM(CASE WHEN a.shipped_quantity = 0 THEN a.line_total - a.TAX ELSE 0 END) active_dollars,        SUM(CASE WHEN a.shipped_quantity > 0 THEN a.line_total - a.TAX ELSE 0 END) shipped_dollars   FROM yfs_order_line a        JOIN yfs_order_header b ON a.ORDER_HEADER_KEY = b.ORDER_HEADER_KEY        JOIN yfs_order_line_schedule c ON a.ORDER_HEADER_KEY = c.ORDER_HEADER_KEY AND a.ORDER_LINE_KEY = c.ORDER_LINE_KEY        JOIN yfs_item d ON a.ITEM_ID = d.ITEM_ID        JOIN yfs_ship_node sn ON c.SHIP_NODE = sn.SHIPNODE_KEY  WHERE     TRUNC(b.ORDER_DATE) = trunc(sysdate-3) AND c.SCHEDULE_NO = 2 AND a.LINE_TYPE <> 'PGC' AND a.LINE_TYPE <> 'VGC' AND d.EXTN_DEPT <> '830' GROUP BY TRUNC(b.ORDER_DATE)), cancelled as ( SELECT TRUNC(b.ORDER_DATE) AS order_date,        trim(TO_CHAR(SUM(A.EXTN_TAXABLE_AMOUNT * ((A.ORIGINAL_ORDERED_QTY - A.ORDERED_QTY) / A.ORIGINAL_ORDERED_QTY)), '999999999999999.99')) cancel_order_dollars   FROM yfs_order_line a        JOIN yfs_order_header b ON a.ORDER_HEADER_KEY = b.ORDER_HEADER_KEY        JOIN yfs_order_line_schedule c ON a.ORDER_HEADER_KEY = c.ORDER_HEADER_KEY AND a.ORDER_LINE_KEY = c.ORDER_LINE_KEY        JOIN yfs_item d ON a.ITEM_ID = d.ITEM_ID        JOIN yfs_ship_node sn ON c.SHIP_NODE = sn.SHIPNODE_KEY  WHERE trunc(b.ORDER_DATE) = trunc(sysdate-3) AND B.enterprise_key = 'STOREELF.COM'        AND c.SCHEDULE_NO = 2 AND a.ORDERED_QTY < a.ORIGINAL_ORDERED_QTY        AND a.LINE_TYPE <> 'PGC' AND a.LINE_TYPE <> 'VGC'        AND d.EXTN_DEPT <> '830' AND B.DOCUMENT_TYPE = '0001' GROUP BY TRUNC(b.order_date)) select a.order_date, a.active_dollars, a.shipped_dollars, c.cancel_order_dollars from active_shipped a, cancelled c where a.order_date = c.order_date